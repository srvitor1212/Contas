// <auto-generated />
using System;
using InfraData.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InfraData.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230809130456_SeedRecebedores")]
    partial class SeedRecebedores
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.10");

            modelBuilder.Entity("Domain.Entities.Dividas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("TEXT");

                    b.Property<byte>("DiaVencimento")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("PagamentosId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RecebedoresId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Valor")
                        .HasPrecision(10, 2)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PagamentosId");

                    b.HasIndex("RecebedoresId");

                    b.ToTable("Dividas");
                });

            modelBuilder.Entity("Domain.Entities.Entradas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataVigencia")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<double>("Valor")
                        .HasPrecision(10, 2)
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Entradas");
                });

            modelBuilder.Entity("Domain.Entities.PagamentoDeDividas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataEfetivacao")
                        .HasColumnType("TEXT");

                    b.Property<int>("DividasId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DividasId");

                    b.ToTable("PagamentoDeDividas");
                });

            modelBuilder.Entity("Domain.Entities.Pagamentos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Pagamentos");
                });

            modelBuilder.Entity("Domain.Entities.Recebedores", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Recebedores");
                });

            modelBuilder.Entity("Domain.Entities.Dividas", b =>
                {
                    b.HasOne("Domain.Entities.Pagamentos", "Pagamentos")
                        .WithMany("Dividas")
                        .HasForeignKey("PagamentosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Recebedores", "Recebedores")
                        .WithMany("Dividas")
                        .HasForeignKey("RecebedoresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pagamentos");

                    b.Navigation("Recebedores");
                });

            modelBuilder.Entity("Domain.Entities.PagamentoDeDividas", b =>
                {
                    b.HasOne("Domain.Entities.Dividas", "Dividas")
                        .WithMany("PagamentoDeDividas")
                        .HasForeignKey("DividasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dividas");
                });

            modelBuilder.Entity("Domain.Entities.Dividas", b =>
                {
                    b.Navigation("PagamentoDeDividas");
                });

            modelBuilder.Entity("Domain.Entities.Pagamentos", b =>
                {
                    b.Navigation("Dividas");
                });

            modelBuilder.Entity("Domain.Entities.Recebedores", b =>
                {
                    b.Navigation("Dividas");
                });
#pragma warning restore 612, 618
        }
    }
}
